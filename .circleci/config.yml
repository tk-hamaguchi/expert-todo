# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build-job:
    docker:
      # specify the version you desire here
       - image: circleci/ruby:2.4.1-node-browsers

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

       - image: circleci/postgres:9.6-alpine
         environment:
           PGDATA: /dev/shm/pgdata/data

    environment:
      DATABASE_URL: postgres://root:@127.0.0.1:5432/circle_test

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Database setup
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            bundle exec rspec --format progress \
                            --format RspecJunitFormatter \
                            --out /tmp/test-results/rspec.xml \
                            --format progress \
                            spec/

          #command: |
          #  mkdir /tmp/test-results
          #  TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
          #
          #  bundle exec rspec --format progress \
          #                  --format RspecJunitFormatter \
          #                  --out /tmp/test-results/rspec.xml \
          #                  --format progress \
          #                  "${TEST_FILES}"

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results


  deploy-job:
    docker:
      - image: circleci/ruby:2.4.1-node-browsers
    working_directory: ~/repo
    steps:
      - run:
          name: Run setup script
          command: bash .circleci/setup-heroku.sh
      - add_ssh_keys:
          fingerprints:
            - "cf:39:7c:b0:2f:fb:fd:73:d1:f7:d4:52:20:30:4f:6a"
      - run:
          name: Deploy Master to Heroku
          command: |
            git push --force git@heroku.com:$HEROKU_APP_NAME.git HEAD:refs/heads/master
            heroku run python manage.py deploy
            heroku restart

 workflows:
   version: 2
   build-deploy:
     jobs:
       - build-job
       - deploy-job:
           requires:
             - build-job
           filters:
             branches:
               only: develop

